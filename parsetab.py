
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "INT DEC CHAR STR BOOL VOID EXPONENTIATION INCREMENT DECREMENT EQUALS GREATER_EQUAL_THAN LESS_EQUAL_THAN AND OR NOT FUN WHILE IF ELSE ELSEIF ID SPECIAL_ID MOD PROGRAM program : PROGRAM ID ';' variable_declaration function_declaration block  empty :  variable_declaration : variables other_variable_declarations  other_variable_declarations : variable_declaration \n                                    | empty  variables : type ids ';'  ids : id other_ids  other_ids : ',' ids \n                  | empty  id : ID \n           | ID '[' expression ']'  expression : grouping\n                   | const\n                   | call  grouping : level1 \n                 | level1 EXPONENTIATION level1  level1 : level2 \n               | '+' level2 \n               | '-' level2  level2 : level3 \n               | level3 OR level3 \n               | level3 AND level3  level3 : level4\n               | level4 '<' level4\n               | level4 '>' level4\n               | level4 LESS_EQUAL_THAN level4\n               | level4 GREATER_EQUAL_THAN level4\n               | level4 EQUALS level4  level4 : level5\n               | level5 '+' level5\n               | level5 '-' level5  level5 : level6\n               | level6 '*' level6\n               | level6 '/' level6\n               | level6 MOD level6\n               |   level6 : '(' expression ')'\n               | const\n               | NOT const\n               | INCREMENT const\n               | DECREMENT const  function_declaration : function other_function_declarations  other_function_declarations : function_declaration \n                                    | empty function : FUN return_type ID '(' parameters ')' '{' variable_declaration statutes '}' ';'  return_type : type \n                    | VOID  type : INT \n             | DEC \n             | CHAR \n             | STR \n             | BOOL  statutes : call\n                 | assignment\n                 | condition\n                 | cycle \n                 | special  call : ID '(' expressions ')'  expressions : expression\n                    | expression ',' expressions  assignment : ID '=' expression ';'\n                   | ID '[' expression ']' '=' expression ';'  condition : IF '[' expression ']' block elses ';'  cycle : WHILE '(' expression ')' block ';'  special : SPECIAL_ID '(' expressions ')'  elses : empty\n              | ELSE block\n              | ELSEIF '(' expression ')' block elses  parameters : type ID other_parameters other_parameters : ',' parameters \n                         | empty  const : id \n              | INT \n              | DEC  block : '{' statutes '}' "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,22,67,],[0,-1,-75,]),'ID':([2,6,7,8,9,10,11,12,16,17,18,23,27,28,29,30,32,34,56,58,59,64,65,66,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,104,120,129,142,147,],[3,-2,21,-48,-49,-50,-51,-52,-3,-4,-5,41,45,-46,-47,-6,21,47,47,21,21,21,21,21,47,47,47,47,47,47,21,21,21,21,21,21,21,21,21,21,21,21,21,127,47,47,41,47,]),';':([3,19,20,21,31,33,46,47,49,50,51,52,53,54,55,57,58,59,60,61,62,63,67,69,75,76,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,129,130,131,136,137,138,146,150,153,154,],[4,30,-2,-10,-7,-9,-8,-10,-12,-13,-14,-15,-72,-73,-74,-17,-36,-36,-20,-23,-29,-32,-75,-36,-11,-36,-18,-38,-19,-36,-36,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,121,-16,-37,-21,-22,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,-58,-36,-2,141,144,145,-66,-67,152,-2,-68,]),'INT':([4,6,15,30,34,56,58,59,64,65,66,68,69,70,71,72,73,74,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,132,134,147,],[8,8,8,-6,54,54,54,54,54,54,54,54,54,54,54,54,54,8,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,8,8,54,]),'DEC':([4,6,15,30,34,56,58,59,64,65,66,68,69,70,71,72,73,74,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,132,134,147,],[9,9,9,-6,55,55,55,55,55,55,55,55,55,55,55,55,55,9,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,9,9,55,]),'CHAR':([4,6,15,30,74,132,134,],[10,10,10,-6,10,10,10,]),'STR':([4,6,15,30,74,132,134,],[11,11,11,-6,11,11,11,]),'BOOL':([4,6,15,30,74,132,134,],[12,12,12,-6,12,12,12,]),'FUN':([5,6,14,16,17,18,30,152,],[15,-2,15,-3,-4,-5,-6,-45,]),'IF':([6,16,17,18,23,30,142,],[-2,-3,-4,-5,42,-6,42,]),'WHILE':([6,16,17,18,23,30,142,],[-2,-3,-4,-5,43,-6,43,]),'SPECIAL_ID':([6,16,17,18,23,30,142,],[-2,-3,-4,-5,44,-6,44,]),'{':([13,14,24,25,26,123,124,126,139,151,152,],[23,-2,-42,-43,-44,23,23,132,23,23,-45,]),'VOID':([15,],[29,]),',':([20,21,47,49,50,51,52,53,54,55,57,58,59,60,61,62,63,68,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,97,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,],[32,-10,-10,-12,-13,-14,-15,-72,-73,-74,-17,-36,-36,-20,-23,-29,-32,-36,-36,-11,-36,-18,-38,-19,-36,-36,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,120,-16,-37,-21,-22,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,-58,-36,134,]),'*':([21,47,50,53,54,55,63,75,79,93,94,95,106,],[-10,-10,-38,-72,-73,-74,90,-11,-38,-39,-40,-41,-37,]),'/':([21,47,50,53,54,55,63,75,79,93,94,95,106,],[-10,-10,-38,-72,-73,-74,91,-11,-38,-39,-40,-41,-37,]),'MOD':([21,47,50,53,54,55,63,75,79,93,94,95,106,],[-10,-10,-38,-72,-73,-74,92,-11,-38,-39,-40,-41,-37,]),'+':([21,34,47,50,53,54,55,56,58,59,62,63,68,69,70,71,72,73,75,76,79,81,82,83,84,85,86,87,93,94,95,106,116,117,118,120,129,147,],[-10,58,-10,-38,-72,-73,-74,58,-36,-36,88,-32,58,58,58,58,58,58,-11,58,-38,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,-37,-33,-34,-35,58,58,58,]),'-':([21,34,47,50,53,54,55,56,58,59,62,63,68,69,70,71,72,73,75,76,79,81,82,83,84,85,86,87,93,94,95,106,116,117,118,120,129,147,],[-10,59,-10,-38,-72,-73,-74,59,-36,-36,89,-32,59,59,59,59,59,59,-11,59,-38,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,-37,-33,-34,-35,59,59,59,]),'<':([21,34,47,50,53,54,55,56,58,59,61,62,63,68,69,70,71,72,73,75,76,79,81,82,88,89,93,94,95,106,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,-72,-73,-74,-36,-36,-36,83,-29,-32,-36,-36,-36,-36,-36,-36,-11,-36,-38,-36,-36,-36,-36,-39,-40,-41,-37,-30,-31,-33,-34,-35,-36,-36,-36,]),'>':([21,34,47,50,53,54,55,56,58,59,61,62,63,68,69,70,71,72,73,75,76,79,81,82,88,89,93,94,95,106,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,-72,-73,-74,-36,-36,-36,84,-29,-32,-36,-36,-36,-36,-36,-36,-11,-36,-38,-36,-36,-36,-36,-39,-40,-41,-37,-30,-31,-33,-34,-35,-36,-36,-36,]),'LESS_EQUAL_THAN':([21,34,47,50,53,54,55,56,58,59,61,62,63,68,69,70,71,72,73,75,76,79,81,82,88,89,93,94,95,106,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,-72,-73,-74,-36,-36,-36,85,-29,-32,-36,-36,-36,-36,-36,-36,-11,-36,-38,-36,-36,-36,-36,-39,-40,-41,-37,-30,-31,-33,-34,-35,-36,-36,-36,]),'GREATER_EQUAL_THAN':([21,34,47,50,53,54,55,56,58,59,61,62,63,68,69,70,71,72,73,75,76,79,81,82,88,89,93,94,95,106,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,-72,-73,-74,-36,-36,-36,86,-29,-32,-36,-36,-36,-36,-36,-36,-11,-36,-38,-36,-36,-36,-36,-39,-40,-41,-37,-30,-31,-33,-34,-35,-36,-36,-36,]),'EQUALS':([21,34,47,50,53,54,55,56,58,59,61,62,63,68,69,70,71,72,73,75,76,79,81,82,88,89,93,94,95,106,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,-72,-73,-74,-36,-36,-36,87,-29,-32,-36,-36,-36,-36,-36,-36,-11,-36,-38,-36,-36,-36,-36,-39,-40,-41,-37,-30,-31,-33,-34,-35,-36,-36,-36,]),'OR':([21,34,47,50,53,54,55,56,58,59,60,61,62,63,68,69,70,71,72,73,75,76,79,83,84,85,86,87,88,89,93,94,95,106,109,110,111,112,113,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,-72,-73,-74,-36,-36,-36,81,-23,-29,-32,-36,-36,-36,-36,-36,-36,-11,-36,-38,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,-37,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,-36,-36,-36,]),'AND':([21,34,47,50,53,54,55,56,58,59,60,61,62,63,68,69,70,71,72,73,75,76,79,83,84,85,86,87,88,89,93,94,95,106,109,110,111,112,113,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,-72,-73,-74,-36,-36,-36,82,-23,-29,-32,-36,-36,-36,-36,-36,-36,-11,-36,-38,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,-37,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,-36,-36,-36,]),'EXPONENTIATION':([21,34,47,50,52,53,54,55,56,57,58,59,60,61,62,63,68,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,106,107,108,109,110,111,112,113,114,115,116,117,118,120,129,147,],[-10,-36,-10,-38,76,-72,-73,-74,-36,-17,-36,-36,-20,-23,-29,-32,-36,-36,-36,-36,-36,-36,-11,-18,-38,-19,-36,-36,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,-37,-21,-22,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,-36,-36,-36,]),']':([21,34,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,70,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,99,100,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,],[-10,-36,-10,75,-12,-13,-14,-15,-72,-73,-74,-17,-36,-36,-20,-23,-29,-32,-36,-36,-11,-36,-18,-38,-19,-36,-36,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,122,123,-16,-37,-21,-22,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,-58,]),')':([21,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,128,133,135,143,147,149,],[-10,-10,-12,-13,-14,-15,-72,-73,-74,-36,-17,-36,-36,-20,-23,-29,-32,-36,-36,-36,-11,-36,106,-18,-38,-19,-36,-36,-36,-36,-36,-36,-36,-36,-36,-39,-40,-41,119,-59,124,125,126,-16,-37,-21,-22,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,-58,-36,-2,-60,-69,-71,-70,-36,151,]),'[':([21,41,42,47,],[34,70,71,34,]),'(':([34,41,43,44,45,47,56,58,59,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,140,147,],[56,68,72,73,74,68,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,147,56,]),'NOT':([34,56,58,59,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,147,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'INCREMENT':([34,56,58,59,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,147,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'DECREMENT':([34,56,58,59,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,147,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'}':([35,36,37,38,39,40,119,121,125,141,144,145,148,],[67,-53,-54,-55,-56,-57,-58,-61,-65,-64,-62,-63,150,]),'=':([41,122,],[69,129,]),'ELSE':([67,130,153,],[-75,139,139,]),'ELSEIF':([67,130,153,],[-75,140,140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'variable_declaration':([4,6,132,],[5,17,142,]),'variables':([4,6,132,],[6,6,6,]),'type':([4,6,15,74,132,134,],[7,7,28,104,7,104,]),'function_declaration':([5,14,],[13,25,]),'function':([5,14,],[14,14,]),'other_variable_declarations':([6,],[16,]),'empty':([6,14,20,127,130,153,],[18,26,33,135,138,138,]),'ids':([7,32,],[19,46,]),'id':([7,32,34,56,58,59,64,65,66,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,147,],[20,20,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'block':([13,123,124,139,151,],[22,130,131,146,153,]),'other_function_declarations':([14,],[24,]),'return_type':([15,],[27,]),'other_ids':([20,],[31,]),'statutes':([23,142,],[35,148,]),'call':([23,34,56,68,69,70,71,72,73,120,129,142,147,],[36,51,51,51,51,51,51,51,51,51,51,36,51,]),'assignment':([23,142,],[37,37,]),'condition':([23,142,],[38,38,]),'cycle':([23,142,],[39,39,]),'special':([23,142,],[40,40,]),'expression':([34,56,68,69,70,71,72,73,120,129,147,],[48,77,97,98,99,100,101,97,97,136,149,]),'grouping':([34,56,68,69,70,71,72,73,120,129,147,],[49,49,49,49,49,49,49,49,49,49,49,]),'const':([34,56,58,59,64,65,66,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,147,],[50,50,79,79,93,94,95,50,50,50,50,50,50,79,79,79,79,79,79,79,79,79,79,79,79,79,50,50,50,]),'level1':([34,56,68,69,70,71,72,73,76,120,129,147,],[52,52,52,52,52,52,52,52,105,52,52,52,]),'level2':([34,56,58,59,68,69,70,71,72,73,76,120,129,147,],[57,57,78,80,57,57,57,57,57,57,57,57,57,57,]),'level3':([34,56,58,59,68,69,70,71,72,73,76,81,82,120,129,147,],[60,60,60,60,60,60,60,60,60,60,60,107,108,60,60,60,]),'level4':([34,56,58,59,68,69,70,71,72,73,76,81,82,83,84,85,86,87,120,129,147,],[61,61,61,61,61,61,61,61,61,61,61,61,61,109,110,111,112,113,61,61,61,]),'level5':([34,56,58,59,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,120,129,147,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,114,115,62,62,62,]),'level6':([34,56,58,59,68,69,70,71,72,73,76,81,82,83,84,85,86,87,88,89,90,91,92,120,129,147,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,116,117,118,63,63,63,]),'expressions':([68,73,120,],[96,102,128,]),'parameters':([74,134,],[103,143,]),'other_parameters':([127,],[133,]),'elses':([130,153,],[137,154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID ; variable_declaration function_declaration block','program',6,'p_program','parser.py',6),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',11),
  ('variable_declaration -> variables other_variable_declarations','variable_declaration',2,'p_variable_declaration','parser.py',16),
  ('other_variable_declarations -> variable_declaration','other_variable_declarations',1,'p_other_variable_declarations','parser.py',21),
  ('other_variable_declarations -> empty','other_variable_declarations',1,'p_other_variable_declarations','parser.py',22),
  ('variables -> type ids ;','variables',3,'p_variables','parser.py',27),
  ('ids -> id other_ids','ids',2,'p_ids','parser.py',32),
  ('other_ids -> , ids','other_ids',2,'p_other_ids','parser.py',37),
  ('other_ids -> empty','other_ids',1,'p_other_ids','parser.py',38),
  ('id -> ID','id',1,'p_id','parser.py',43),
  ('id -> ID [ expression ]','id',4,'p_id','parser.py',44),
  ('expression -> grouping','expression',1,'p_expression','parser.py',48),
  ('expression -> const','expression',1,'p_expression','parser.py',49),
  ('expression -> call','expression',1,'p_expression','parser.py',50),
  ('grouping -> level1','grouping',1,'p_grouping','parser.py',54),
  ('grouping -> level1 EXPONENTIATION level1','grouping',3,'p_grouping','parser.py',55),
  ('level1 -> level2','level1',1,'p_level1','parser.py',59),
  ('level1 -> + level2','level1',2,'p_level1','parser.py',60),
  ('level1 -> - level2','level1',2,'p_level1','parser.py',61),
  ('level2 -> level3','level2',1,'p_level2','parser.py',65),
  ('level2 -> level3 OR level3','level2',3,'p_level2','parser.py',66),
  ('level2 -> level3 AND level3','level2',3,'p_level2','parser.py',67),
  ('level3 -> level4','level3',1,'p_level3','parser.py',71),
  ('level3 -> level4 < level4','level3',3,'p_level3','parser.py',72),
  ('level3 -> level4 > level4','level3',3,'p_level3','parser.py',73),
  ('level3 -> level4 LESS_EQUAL_THAN level4','level3',3,'p_level3','parser.py',74),
  ('level3 -> level4 GREATER_EQUAL_THAN level4','level3',3,'p_level3','parser.py',75),
  ('level3 -> level4 EQUALS level4','level3',3,'p_level3','parser.py',76),
  ('level4 -> level5','level4',1,'p_level4','parser.py',80),
  ('level4 -> level5 + level5','level4',3,'p_level4','parser.py',81),
  ('level4 -> level5 - level5','level4',3,'p_level4','parser.py',82),
  ('level5 -> level6','level5',1,'p_level5','parser.py',86),
  ('level5 -> level6 * level6','level5',3,'p_level5','parser.py',87),
  ('level5 -> level6 / level6','level5',3,'p_level5','parser.py',88),
  ('level5 -> level6 MOD level6','level5',3,'p_level5','parser.py',89),
  ('level5 -> <empty>','level5',0,'p_level5','parser.py',90),
  ('level6 -> ( expression )','level6',3,'p_level6','parser.py',94),
  ('level6 -> const','level6',1,'p_level6','parser.py',95),
  ('level6 -> NOT const','level6',2,'p_level6','parser.py',96),
  ('level6 -> INCREMENT const','level6',2,'p_level6','parser.py',97),
  ('level6 -> DECREMENT const','level6',2,'p_level6','parser.py',98),
  ('function_declaration -> function other_function_declarations','function_declaration',2,'p_function_declaration','parser.py',102),
  ('other_function_declarations -> function_declaration','other_function_declarations',1,'p_other_function_declarations','parser.py',107),
  ('other_function_declarations -> empty','other_function_declarations',1,'p_other_function_declarations','parser.py',108),
  ('function -> FUN return_type ID ( parameters ) { variable_declaration statutes } ;','function',11,'p_function','parser.py',113),
  ('return_type -> type','return_type',1,'p_return_type','parser.py',118),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',119),
  ('type -> INT','type',1,'p_type','parser.py',123),
  ('type -> DEC','type',1,'p_type','parser.py',124),
  ('type -> CHAR','type',1,'p_type','parser.py',125),
  ('type -> STR','type',1,'p_type','parser.py',126),
  ('type -> BOOL','type',1,'p_type','parser.py',127),
  ('statutes -> call','statutes',1,'p_statutes','parser.py',132),
  ('statutes -> assignment','statutes',1,'p_statutes','parser.py',133),
  ('statutes -> condition','statutes',1,'p_statutes','parser.py',134),
  ('statutes -> cycle','statutes',1,'p_statutes','parser.py',135),
  ('statutes -> special','statutes',1,'p_statutes','parser.py',136),
  ('call -> ID ( expressions )','call',4,'p_call','parser.py',141),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',146),
  ('expressions -> expression , expressions','expressions',3,'p_expressions','parser.py',147),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','parser.py',151),
  ('assignment -> ID [ expression ] = expression ;','assignment',7,'p_assignment','parser.py',152),
  ('condition -> IF [ expression ] block elses ;','condition',7,'p_condition','parser.py',157),
  ('cycle -> WHILE ( expression ) block ;','cycle',6,'p_cycle','parser.py',161),
  ('special -> SPECIAL_ID ( expressions )','special',4,'p_special','parser.py',165),
  ('elses -> empty','elses',1,'p_elses','parser.py',169),
  ('elses -> ELSE block','elses',2,'p_elses','parser.py',170),
  ('elses -> ELSEIF ( expression ) block elses','elses',6,'p_elses','parser.py',171),
  ('parameters -> type ID other_parameters','parameters',3,'p_parameters','parser.py',176),
  ('other_parameters -> , parameters','other_parameters',2,'p_other_parameters','parser.py',181),
  ('other_parameters -> empty','other_parameters',1,'p_other_parameters','parser.py',182),
  ('const -> id','const',1,'p_const','parser.py',186),
  ('const -> INT','const',1,'p_const','parser.py',187),
  ('const -> DEC','const',1,'p_const','parser.py',188),
  ('block -> { statutes }','block',3,'p_block','parser.py',193),
]
